package menu;

import java.awt.Font;

import javax.media.opengl.GL;
import javax.media.opengl.GLAutoDrawable;

import com.sun.opengl.util.j2d.TextRenderer;

public class Teken {

	public static TextRenderer startText(GLAutoDrawable drawable, String font,
			double size) {
		int sizeint = (int) size;
		TextRenderer renderer = new TextRenderer(new Font(font, Font.BOLD,
				sizeint));
		renderer.beginRendering(drawable.getWidth(), drawable.getHeight());
		return renderer;
	}

	public static void textDraw(GL gl, String str, double x, double y,
			TextRenderer renderer) {
		int xint = (int) x;
		int yint = (int) y;
		renderer.setColor(1.0f, 1f, 1f, 1f);
		renderer.draw(str, xint, yint);

	}

	public static void endText(TextRenderer renderer) {
		renderer.endRendering();
	}

	public static void textDraw(GLAutoDrawable drawable, GL gl, String str,
			float x, float y, float size) {
		int xint = (int) x;
		int yint = (int) y;
		int sizeint = (int) size;

		TextRenderer renderer = new TextRenderer(new Font("Agency FB",
				Font.BOLD, sizeint));
		renderer.beginRendering(drawable.getWidth(), drawable.getHeight());
		// optionally set the color
		renderer.setColor(1.0f, 1f, 1f, 1f);
		renderer.draw(str, xint, yint);

		// ... more draw commands, color changes, etc.
		renderer.endRendering();
	}

	public static void textDraw(GLAutoDrawable drawable, GL gl, String str,
			float x, float y, float size, String font) {
		int xint = (int) x;
		int yint = (int) y;
		int sizeint = (int) size;

		TextRenderer renderer = new TextRenderer(new Font(font, Font.BOLD,
				sizeint));
		renderer.beginRendering(drawable.getWidth(), drawable.getHeight());
		// optionally set the color
		renderer.setColor(1.0f, 1f, 1f, 1f);
		renderer.draw(str, xint, yint);

		// ... more draw commands, color changes, etc.
		renderer.endRendering();
	}

	public static void textDrawMetKleur(GLAutoDrawable drawable, GL gl,
			String str, float x, float y, float size, float r, float g, float b) {
		int xint = (int) x;
		int yint = (int) y;
		int sizeint = (int) size;

		TextRenderer renderer = new TextRenderer(new Font("Agency FB",
				Font.BOLD, sizeint));
		renderer.beginRendering(drawable.getWidth(), drawable.getHeight());
		// optionally set the color
		renderer.setColor(r, g, b, 1f);
		renderer.draw(str, xint, yint);

		// ... more draw commands, color changes, etc.
		renderer.endRendering();
	}

	public static void tekenButton(GL gl, float xmin, float ymin, float xmax,
			float ymax) {
		gl.glColor3f(0.16f, 0.16f, 0.16f);
		rechthoek(gl, xmin, ymin, xmax, ymax);

		gl.glLineWidth(3);
		gl.glColor3f(0.5f, 0.5f, 0.5f);
		lineOnScreen(gl, xmin, ymin, xmax, ymin);
		lineOnScreen(gl, xmax, ymax, xmax, ymin);
		lineOnScreen(gl, xmax, ymax, xmin, ymax);
		lineOnScreen(gl, xmin, ymin, xmin, ymax);
	}

	public static void tekenButtonMetKleur(GL gl, float xmin, float ymin,
			float xmax, float ymax, float r, float g, float b) {
		gl.glColor3f(r, g, b);
		rechthoek(gl, xmin, ymin, xmax, ymax);

		gl.glLineWidth(3);
		gl.glColor3f(0.5f, 0.5f, 0.5f);
		lineOnScreen(gl, xmin, ymin, xmax, ymin);
		lineOnScreen(gl, xmax, ymax, xmax, ymin);
		lineOnScreen(gl, xmax, ymax, xmin, ymax);
		lineOnScreen(gl, xmin, ymin, xmin, ymax);
	}

	public static void rechthoek(GL gl, float x, float y, float x2, float y2) {
		gl.glBegin(GL.GL_QUADS);
		gl.glVertex2f(x, y);
		gl.glVertex2f(x2, y);
		gl.glVertex2f(x2, y2);
		gl.glVertex2f(x, y2);
		gl.glEnd();
	}

	public static void lineOnScreen(GL gl, float x1, float y1, float x2,
			float y2) {
		gl.glBegin(GL.GL_LINES);
		gl.glVertex2f(x1, y1);
		gl.glVertex2f(x2, y2);
		gl.glEnd();
	}

	public static void drawCuboid(GL gl, double xmin, double xmax, double ymin,
			double ymax, double zmin, double zmax, int tex) {
		drawCuboid(gl, xmin, xmax, ymin, ymax, zmin, zmax, new int[] { tex,
				tex, tex, tex, tex, tex });
	}

	public static void drawCuboid(GL gl, double xmin, double xmax, double ymin,
			double ymax, double zmin, double zmax, int[] texList) {
		// Floor plane
		gl.glBindTexture(GL.GL_TEXTURE_2D, texList[0]);

		gl.glBegin(GL.GL_QUADS);
		gl.glNormal3d(0, -1, 0);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(xmin, ymin, zmin);
		gl.glTexCoord2d(0.0, 1.0);
		gl.glVertex3d(xmin, ymin, zmax);
		gl.glTexCoord2d(1.0, 1.0);
		gl.glVertex3d(xmax, ymin, zmax);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(xmax, ymin, zmin);
		gl.glEnd();

		gl.glBindTexture(GL.GL_TEXTURE_2D, texList[1]);
		// Top plane
		gl.glBegin(GL.GL_QUADS);
		gl.glNormal3d(0, 1, 0);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(xmin, ymax, zmin);
		gl.glTexCoord2d(0.0, 1.0);
		gl.glVertex3d(xmin, ymax, zmax);
		gl.glTexCoord2d(1.0, 1.0);
		gl.glVertex3d(xmax, ymax, zmax);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(xmax, ymax, zmin);
		gl.glEnd();

		gl.glBindTexture(GL.GL_TEXTURE_2D, texList[2]);
		gl.glBegin(GL.GL_QUADS);

		// Back plane
		gl.glNormal3d(0, 0, -1);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(xmax, ymin, zmin);
		gl.glTexCoord2d(0.0, 1.0);
		gl.glVertex3d(xmax, ymax, zmin);
		gl.glTexCoord2d(1.0, 1.0);
		gl.glVertex3d(xmax, ymax, zmax);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(xmax, ymin, zmax);

		gl.glEnd();

		gl.glBindTexture(GL.GL_TEXTURE_2D, texList[3]);
		gl.glBegin(GL.GL_QUADS);
		// Right side plane
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(xmax, ymin, zmax);
		gl.glTexCoord2d(1.0, 1.0);
		gl.glVertex3d(xmax, ymax, zmax);
		gl.glTexCoord2d(0.0, 1.0);
		gl.glVertex3d(xmin, ymax, zmax);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(xmin, ymin, zmax);
		gl.glEnd();

		gl.glBindTexture(GL.GL_TEXTURE_2D, texList[4]);
		gl.glBegin(GL.GL_QUADS);
		// Front plane
		gl.glTexCoord2d(0.0, 1.0);
		gl.glVertex3d(xmin, ymax, zmax);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(xmin, ymin, zmax);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(xmin, ymin, zmin);
		gl.glTexCoord2d(1.0, 1.0);
		gl.glVertex3d(xmin, ymax, zmin);
		gl.glEnd();

		gl.glBindTexture(GL.GL_TEXTURE_2D, texList[5]);
		gl.glBegin(GL.GL_QUADS);
		// Left plane
		gl.glTexCoord2d(1.0, 1.0);
		gl.glVertex3d(xmin, ymax, zmin);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(xmin, ymin, zmin);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(xmax, ymin, zmin);
		gl.glTexCoord2d(0.0, 1.0);
		gl.glVertex3d(xmax, ymax, zmin);
		gl.glEnd();
	}

	public static void kruis(GL gl, float x1, float y1, float x2, float y2) {
		gl.glBegin(GL.GL_LINES);
		gl.glVertex2f(x1, y1);
		gl.glVertex2f(x2, y2);
		gl.glEnd();
		gl.glBegin(GL.GL_LINES);
		gl.glVertex2f(x1, y2);
		gl.glVertex2f(x2, y1);
		gl.glEnd();
	}
}
