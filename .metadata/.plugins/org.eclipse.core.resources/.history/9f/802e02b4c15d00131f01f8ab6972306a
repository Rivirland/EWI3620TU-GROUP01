package items;

import javax.media.opengl.GL;

import engine.GameObject;
import engine.Maze;
import engine.MazeRunner;

public class Roof extends Item {

	public int matrixX, matrixZ;
	public double h;
	public double WALL_LENGTH;

	public Roof(int mX, int mZ, double x, double y, double z, int i,
			double height, double WL) {
		super(x, y, z, i);
		h = height;
		WALL_LENGTH = WL;
		matrixX = mX;
		matrixZ = mZ;
	}

	@Override
	public void display(GL gl) {
		gl.glDisable(GL.GL_CULL_FACE);

		gl.glPolygonMode(GL.GL_FRONT_AND_BACK, GL.GL_FILL);
		gl.glBindTexture(GL.GL_TEXTURE_2D, 3);
		gl.glBegin(GL.GL_TRIANGLE_FAN);

		gl.glTexCoord2d(0.5, 1.0);
		gl.glVertex3d(WALL_LENGTH / 2, h + 2, WALL_LENGTH / 2);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(WALL_LENGTH, h, WALL_LENGTH);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(0.0, h, WALL_LENGTH);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(0.0, h, 0.0);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glVertex3d(WALL_LENGTH, h, 0.0);
		gl.glTexCoord2d(0.0, 0.0);
		gl.glVertex3d(WALL_LENGTH, h, WALL_LENGTH);
		gl.glTexCoord2d(1.0, 0.0);
		gl.glEnd();
		gl.glEnable(GL.GL_CULL_FACE);
	}

	@Override
	public double getGlobalX() {
		// TODO Auto-generated method stub
		return locationX;
	}

	@Override
	public double getGlobalY() {
		// TODO Auto-generated method stub
		return locationY;
	}

	@Override
	public double getGlobalZ() {
		// TODO Auto-generated method stub
		return locationZ;
	}

	@Override
	public boolean touches(GameObject object) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean isOnWalls() {
		Maze maze = MazeRunner.level.getMaze(MazeRunner.level
				.getCurrentMaze(this));
		return (maze.isWall(matrixX - 1, matrixZ - 1)
				|| maze.isWall(matrixX - 1, matrixZ + 1)
				|| maze.isWall(matrixX + 1, matrixZ - 1)
				|| maze.isWall(matrixX + 1, matrixZ + 1)
				|| maze.isWall(matrixX + 1, matrixZ)
				|| maze.isWall(matrixX - 1, matrixZ)
				|| maze.isWall(matrixX, matrixZ + 1) || maze.isWall(matrixX,
				matrixZ - 1));
	}
}
